@import "variable";
@import "mixins";
// Outer navigation wrapper

// Navigation
nav {
  float: right;
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
    li {
      float: left;
      position: relative;
      a,
      a:visited {
        display: block;
        padding: 0 20px;
        line-height: $nav-height;
        background: $white;
        color: $black;
        text-decoration: none;
        &:hover {
          background: darken($white, 3);
          color: $black;
        }
        &:not(:only-child):after {
          padding-left: 4px;
          content: ' â–¾';
        }
      } // Dropdown list
      ul li {
        min-width: 190px;
        a {
          padding: 15px;
          line-height: 20px;
        }
      }
    }
  }
}

/* Mobile navigation */

// Binds to JS Toggle
.nav-mobile {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  background: $white;
  height: 78px;
  width: $nav-height;
  @include mQ($MinMobile, $MaxMobile){
    display: block;
  }
}
@media only screen and (max-width: $MaxMobile) {
  // Hamburger nav visible on mobile only

  nav {
   width: 100%;
   display: block;

    padding: $nav-height 0 15px;
    ul {
      display: none;
      li {
        float: none;
        a {
          padding: 15px;
          line-height: 20px;
        }
      }
    }
  }

}

.nav-list{
  @include desktop($MaxMobile){
    display: block !important;
  }
  @include mQ($MinMobile, $MaxMobile){
    display: none;
  }
}


#nav-toggle {
  position: absolute;
  left: 18px;
  top: 26px;
  cursor: pointer;
  padding: 10px 35px 16px 0px;
  span,
  span:before,
  span:after {
    cursor: pointer;
    border-radius: 1px;
    height: 2px;
    width: 35px;
    background: $black;
    position: absolute;
    display: block;
    content: '';
    transition: all 300ms ease-in-out;
  }
  span:before {
    top: -10px;
  }
  span:after {
    bottom: -10px;
  }
  &.active span {
    background-color: transparent;
    &:before,
    &:after {
      top: 0;
    }
    &:before {
      transform: rotate(45deg);
    }
    &:after {
      transform: rotate(-45deg);
    }
  }
}
